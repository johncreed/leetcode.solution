// Floyd Warshall Algorithm | DP-16
// https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

#define INF 1e7

void solve(){
    int V;
    cin >> V;
    vector<vector<int>> G(V, vector<int>(V, INF) );
    
    for(int i = 0; i < V; i++){
        for(int j = 0; j < V; j++){
            cin >> G[i][j];
        }
    }
    
    for(int k = 0; k < V; k++ ){
        for(int i = 0; i < V; i++){
            for(int j = 0; j < V; j++){
                if( G[i][k] + G[k][j] < G[i][j] )
                    G[i][j] = G[i][k] + G[k][j];
            }
        }
    }
    
    for(int i = 0; i < V; i++){
        for(int j = 0; j < V; j++){
            if( G[i][j] != INF )
                cout << G[i][j] << " ";
            else
                cout << "INF" << " ";
        }
        cout << endl;
    }
    
}

int main() {
	//code
	
	int T, t = 0;
	cin >> T;
	while(t < T){
	    solve();
	    t++;
	}
	return 0;
}
